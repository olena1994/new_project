{"version":3,"sources":["components/UserForm.tsx","components/UserList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["UserForm","users","addUser","useState","name","setName","surname","setSurname","email","setEmail","onSubmit","event","preventDefault","newUser","id","length","type","value","onChange","target","placeholder","UserList","removeUser","map","user","onClick","App","setUsers","className","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAQaA,EAA4B,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QACjD,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAmBA,OACE,uBAAMC,SAhBa,SAACC,GACpBA,EAAMC,iBAEN,IAAMC,EAAU,CACdC,GAAIb,EAAMc,OAAS,EAAId,EAAMA,EAAMc,OAAS,GAAGD,GAAK,EAAI,EACxDV,KAAMA,EACNE,QAASA,EACTE,MAAOA,GAETN,EAAQW,GACRR,EAAQ,IACRE,EAAW,IACXE,EAAS,KAIT,UACE,uBACEO,KAAK,OACLC,MAAOb,EACPc,SAAU,SAACP,GAAD,OAAWN,EAAQM,EAAMQ,OAAOF,QAC1CG,YAAY,SAGd,uBACEJ,KAAK,OACLC,MAAOX,EACPY,SAAU,SAACP,GAAD,OAAWJ,EAAWI,EAAMQ,OAAOF,QAC7CG,YAAY,YAGd,uBACEJ,KAAK,OACLC,MAAOT,EACPU,SAAU,SAACP,GAAD,OAAWF,EAASE,EAAMQ,OAAOF,QAC3CG,YAAY,UAGd,wBACEJ,KAAK,SADP,kEC7COK,EAA2B,SAAC,GAA2B,IAAzBpB,EAAwB,EAAxBA,MAAOqB,EAAiB,EAAjBA,WAChD,OACE,8BACGrB,EAAMsB,KAAI,SAAAC,GAAI,OACb,qCACE,8BAAMA,EAAKV,KACX,gCAAMU,EAAKpB,KAAM,IAAKoB,EAAKlB,WAC3B,8BAAMkB,EAAKhB,QACX,wBACEQ,KAAK,SACLS,QAAS,kBAAMH,EAAWE,EAAKV,KAFjC,0ICsBKY,MAjCf,WACE,MAA0BvB,mBAAsB,IAAhD,mBAAOF,EAAP,KAAc0B,EAAd,KAUA,OACE,sBAAKC,UAAU,MAAf,UACE,iCACE,mKAA6B3B,EAAMc,YAErC,cAAC,EAAD,CACEd,MAAOA,EACPC,QAfU,SAACW,GACfc,EAAS,GAAD,mBAAK1B,GAAL,CAAYY,QAgBjBZ,EAAMc,OAAS,GACd,gCACE,gJACA,cAAC,EAAD,CACEd,MAAOA,EACPqB,WAlBS,SAACR,GAClBa,EAAS,YAAI1B,EAAM4B,QAAO,SAACL,GAAD,OAAUA,EAAKV,KAAOA,iBCCrCgB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.66c56c07.chunk.js","sourcesContent":["import { FormEvent, useState } from 'react'\nimport { User } from '../type'\n\ntype Props = {\n  addUser: (user: User) => void\n  users: User[]\n}\n\nexport const UserForm: React.FC<Props> = ({ users, addUser }) => {\n  const [name, setName] = useState('')\n  const [surname, setSurname] = useState('')\n  const [email, setEmail] = useState('')\n\n  //на форму при натисканні кнопки додаємо нового user і скидаємо значення\n  //інпутів на ось це \"\"\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n\n    const newUser = {\n      id: users.length > 0 ? users[users.length - 1].id + 1 : 0,\n      name: name,\n      surname: surname,\n      email: email\n    }\n    addUser(newUser)\n    setName(\"\")\n    setSurname(\"\")\n    setEmail(\"\")\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={name}\n        onChange={(event) => setName(event.target.value)}\n        placeholder=\"name\"\n      />\n\n      <input\n        type=\"text\"\n        value={surname}\n        onChange={(event) => setSurname(event.target.value)}\n        placeholder=\"surname\"\n      />\n\n      <input\n        type=\"text\"\n        value={email}\n        onChange={(event) => setEmail(event.target.value)}\n        placeholder=\"email\"\n      />\n\n      <button\n        type=\"submit\"\n      >\n        Зберегти\n      </button>\n    </form>\n  )\n}","import React from \"react\";\nimport { User } from \"../type\";\n\ntype Props = {\n  users: User[]\n  removeUser: (id: number) => void\n}\n\nexport const UserList:React.FC<Props> = ({ users, removeUser }) => {\n  return (\n    <div>\n      {users.map(user => (\n        <>\n          <div>{user.id}</div>\n          <div>{user.name}{' '}{user.surname}</div>\n          <div>{user.email}</div>\n          <button\n            type=\"button\"\n            onClick={() => removeUser(user.id)}\n          >\n            Видалити користувача\n          </button>\n        </>\n      ))}\n    </div>\n  )\n}","import { useState } from 'react';\nimport { UserForm } from './components/UserForm';\nimport { UserList } from './components/UserList';\nimport { User } from './type';\n\nfunction App() {\n  const [users, setUsers] = useState<User[] | []>([])\n\n  const addUser = (newUser: User) => {\n    setUsers([...users, newUser])\n  }\n\n  const removeUser = (id: number) => {\n    setUsers([...users.filter((user) => user.id !== id)])\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Кількість користувачів: {users.length}</h1>\n      </header>\n      <UserForm\n        users={users}\n        addUser={addUser}\n      />\n      {users.length > 0 && (\n        <div>\n          <h3>Список користувачів:</h3>\n          <UserList\n            users={users}\n            removeUser={removeUser}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}